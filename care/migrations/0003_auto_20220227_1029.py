# Generated by Django 3.2.12 on 2022-02-27 10:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('care', '0002_auto_20220225_1208'),
    ]

    operations = [
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('icds_code', models.CharField(max_length=6)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('full_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=10)),
                ('landmark', models.CharField(max_length=150)),
                ('gender', models.CharField(choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE'), ('OTHER', 'OTHER')], max_length=10)),
                ('emergency_phone_number', models.CharField(max_length=10)),
                ('expired_time', models.DateTimeField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField()),
                ('care_type', models.CharField(choices=[('General care', (('MC', 'Mouth care'), ('BA', 'Bath'), ('NC', 'Nail cutting'), ('SH', 'Shaving'))), ('Genito urinary care', (('PC', 'Perennial care'), ('CCT', 'Condom catheterisation & training'), ('NCT', 'Nelcath catheterisation & training'), ('FC', 'Foley’s catheterisation'), ('FCC', 'Foley’s catheter care'), ('SC', 'Suprapubic catheterisation'), ('SCC', 'Suprapubic catheter care'), ('BWN', 'Bladder wash with normal saline'), ('BWS', 'Bladder wash with soda bicarbonate'), ('UC', 'Urostomy care'))), ('Gastro-intestinal care', (('RTI', 'Ryles tube insertion'), ('RTC', 'Ryles tube care'), ('RTT', 'Ryles tube feeding & training'), ('PGC', 'PEG care'), ('PRE', 'Per Rectal Enema'), ('HE', 'High enema'), ('BS', 'Bisacodyl Suppository'), ('DE', 'Digital evacuation'), ('CC', 'Colostomy care'), ('CIC', 'Colostomy irrigation care'), ('IC', 'ileostomy care'))), ('Wound care', (('WCT', 'Wound care training given to family'), ('WD', 'Wound dressing'), ('SR', 'Suture removal'), ('VD', 'Vacuum dressing'))), ('Respiratory care', (('TC', 'Tracheostomy care'), ('CP', 'Chest physiotherapy'), ('IT', 'Inhaler training'), ('OCT', 'Oxygen concentrator - training'), ('BPT', 'Bi-PAP training'), ('BD', 'Bandaging'), ('ULLB', 'Upper limb lymphedema bandaging'), ('LLLB', 'Lower limb lymphedema bandaging'), ('ULLH', 'Upper limb lymphedema hosiery'), ('PVOD', 'PVOD bandaging'))), ('Invasive care', (('IFI', 'IV fluid infusion'), ('IMBA', 'IV medicine bolus administration'), ('ICC', 'IV cannula care'), ('ICI', 'IV cannula insertion'), ('SCI', 'S/C cannula insertion'), ('SCIS', 'S/C fluid infusion (subcutaneous)'), ('SMBA', 'S/C medicine bolus administration'), ('SCCC', 'S/C cannula care'), ('AT', 'Ascites tapping'), ('ACC', 'Ascitic catheter care'))), ('Physiotherapy', (('PM', 'Passive Movement'), ('AM', 'Active Movement'), ('SE', 'Strengthening exercises'), ('NDT', 'NDT'), ('GAIT', 'GAIT Training'), ('MTT', 'Modalities + text field'), ('BE', 'Breathing exercises'), ('BCE', 'Balance & Coordination exercises'), ('ST', 'Stretching'), ('PCR', 'Postural correction')))], max_length=100)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='care.patient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='district',
            name='name',
        ),
        migrations.RemoveField(
            model_name='facility',
            name='address',
        ),
        migrations.AddField(
            model_name='district',
            name='created_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='district',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='facility',
            name='created_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='facility',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='lsgbody',
            name='created_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='lsgbody',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='state',
            name='created_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='state',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='ward',
            name='created_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='ward',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.CreateModel(
            name='VisitSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('duration', models.TimeField()),
                ('nurse', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='care.patient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VisitDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('palliative_phase', models.CharField(max_length=100)),
                ('blood_pressure', models.CharField(max_length=7)),
                ('pulse', models.CharField(max_length=7)),
                ('general_random_blood_sugar', models.CharField(max_length=7)),
                ('personal_hygiene', models.TextField()),
                ('mouth_hygiene', models.TextField()),
                ('pubic_hygiene', models.TextField()),
                ('systemic_examination', models.TextField()),
                ('patient_at_peace', models.BooleanField(default=False)),
                ('pain', models.BooleanField(default=False)),
                ('symptoms', models.CharField(blank=True, choices=[(1, 'ASYMPTOMATIC'), (2, 'FEVER'), (3, 'SORE THROAT'), (4, 'COUGH'), (5, 'BREATHLESSNESS'), (6, 'MYALGIA'), (7, 'ABDOMINAL DISCOMFORT'), (8, 'VOMITING/DIARRHOEA'), (9, 'OTHERS'), (10, 'SARI'), (11, 'SPUTUM'), (12, 'NAUSEA'), (13, 'CHEST PAIN'), (14, 'HEMOPTYSIS'), (15, 'NASAL DISCHARGE'), (16, 'BODY ACHE')], max_length=100, null=True)),
                ('note', models.TextField()),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='care.visitschedule')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TreatmentNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('note', models.TextField()),
                ('description', models.TextField()),
                ('care_type', models.CharField(choices=[('General care', (('MC', 'Mouth care'), ('BA', 'Bath'), ('NC', 'Nail cutting'), ('SH', 'Shaving'))), ('Genito urinary care', (('PC', 'Perennial care'), ('CCT', 'Condom catheterisation & training'), ('NCT', 'Nelcath catheterisation & training'), ('FC', 'Foley’s catheterisation'), ('FCC', 'Foley’s catheter care'), ('SC', 'Suprapubic catheterisation'), ('SCC', 'Suprapubic catheter care'), ('BWN', 'Bladder wash with normal saline'), ('BWS', 'Bladder wash with soda bicarbonate'), ('UC', 'Urostomy care'))), ('Gastro-intestinal care', (('RTI', 'Ryles tube insertion'), ('RTC', 'Ryles tube care'), ('RTT', 'Ryles tube feeding & training'), ('PGC', 'PEG care'), ('PRE', 'Per Rectal Enema'), ('HE', 'High enema'), ('BS', 'Bisacodyl Suppository'), ('DE', 'Digital evacuation'), ('CC', 'Colostomy care'), ('CIC', 'Colostomy irrigation care'), ('IC', 'ileostomy care'))), ('Wound care', (('WCT', 'Wound care training given to family'), ('WD', 'Wound dressing'), ('SR', 'Suture removal'), ('VD', 'Vacuum dressing'))), ('Respiratory care', (('TC', 'Tracheostomy care'), ('CP', 'Chest physiotherapy'), ('IT', 'Inhaler training'), ('OCT', 'Oxygen concentrator - training'), ('BPT', 'Bi-PAP training'), ('BD', 'Bandaging'), ('ULLB', 'Upper limb lymphedema bandaging'), ('LLLB', 'Lower limb lymphedema bandaging'), ('ULLH', 'Upper limb lymphedema hosiery'), ('PVOD', 'PVOD bandaging'))), ('Invasive care', (('IFI', 'IV fluid infusion'), ('IMBA', 'IV medicine bolus administration'), ('ICC', 'IV cannula care'), ('ICI', 'IV cannula insertion'), ('SCI', 'S/C cannula insertion'), ('SCIS', 'S/C fluid infusion (subcutaneous)'), ('SMBA', 'S/C medicine bolus administration'), ('SCCC', 'S/C cannula care'), ('AT', 'Ascites tapping'), ('ACC', 'Ascitic catheter care'))), ('Physiotherapy', (('PM', 'Passive Movement'), ('AM', 'Active Movement'), ('SE', 'Strengthening exercises'), ('NDT', 'NDT'), ('GAIT', 'GAIT Training'), ('MTT', 'Modalities + text field'), ('BE', 'Breathing exercises'), ('BCE', 'Balance & Coordination exercises'), ('ST', 'Stretching'), ('PCR', 'Postural correction')))], max_length=100)),
                ('treatment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='care.treatment')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='care.visitschedule')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='treatment',
            name='visit',
            field=models.ManyToManyField(through='care.TreatmentNotes', to='care.VisitSchedule'),
        ),
        migrations.CreateModel(
            name='PatientDisease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('note', models.TextField()),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='care.disease')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='care.patient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='patient',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='care.facility'),
        ),
        migrations.AddField(
            model_name='patient',
            name='ward',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='care.ward'),
        ),
        migrations.CreateModel(
            name='FamilyDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('full_name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=10)),
                ('date_of_birth', models.DateField()),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('relation', models.CharField(choices=[('PARENT', 'PARENT'), ('CHILD', 'CHILD'), ('RELATIVE', 'RELATIVE'), ('NEIGHBOUR', 'NEIGHBOUR'), ('FRIEND', 'FRIEND'), ('NONE', 'NONE')], max_length=20)),
                ('address', models.TextField()),
                ('education', models.CharField(max_length=100)),
                ('occupation', models.CharField(max_length=100)),
                ('remarks', models.TextField(max_length=100)),
                ('is_primary', models.BooleanField(default=False)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='care.patient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='disease',
            name='patients',
            field=models.ManyToManyField(through='care.PatientDisease', to='care.Patient'),
        ),
    ]
